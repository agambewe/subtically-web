{"remainingRequest":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bewe/Documents/ppta/subtically/web/src/components/sideBar.vue?vue&type=style&index=0&id=7d311f5c&scoped=true&lang=css&","dependencies":[{"path":"/Users/bewe/Documents/ppta/subtically/web/src/components/sideBar.vue","mtime":1604920962885},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgdXJsKCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9Sm9sbHklMjBMb2RnZXIiKTsK"},{"version":3,"sources":["sideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA","file":"sideBar.vue","sourceRoot":"src/components","sourcesContent":["<template> \n    <div> \n        <v-navigation-drawer\n        v-model=\"drawer\"\n        :expand-on-hover=\"expandOnHover\"\n        :mini-variant=\"miniVariant\"\n        color=\"#4E5862\"\n        absolute\n        dark\n        >\n        <!-- :src=\"bg\" -->\n            <v-list-item> \n                <v-list-item-content> \n                    <v-list-item-title class=\"title\"> Kouvee </v-list-item-title> \n                    <v-list-item-subtitle> shop </v-list-item-subtitle> \n                </v-list-item-content> \n            </v-list-item> \n            <v-divider></v-divider> \n            <v-list shaped> \n                <v-list-group\n                    v-for=\"sub in items\"\n                    :key=\"sub.title\"\n                    v-model=\"sub.active\"\n                    :prepend-icon=\"sub.icon\"\n                    no-action\n                >\n                <template v-slot:activator>\n                    <v-list-item-content>\n                        <v-list-item-title v-text=\"sub.title\"></v-list-item-title>\n                    </v-list-item-content>\n                </template>\n                \n                    <v-list-item \n                        v-for=\"item in sub.items\"\n                        :key=\"item.title\" link \n                        @click=\"item.path\"\n                    >\n                        <v-list-item-content> \n                            <router-link :to=\"item.path\" tag=\"ul\" exact>\n                                <v-list-item-title v-text=\"item.title\"></v-list-item-title>\n                            </router-link>\n                        </v-list-item-content> \n                    </v-list-item> \n                </v-list-group>\n            </v-list>\n        </v-navigation-drawer>\n        <v-dialog v-model=\"dialog\" persistent max-width=\"528px\">\n            <v-card>\n                <v-card-title>\n                    <span class=\"headline text-md-center\">Pegawai Info</span>\n                </v-card-title>\n                <v-card-text>\n                    <v-container>\n                        <tbody>\n                            <ul>\n                                <ul># <strong>Nama : </strong>{{ this.dataPegawai.nama }}</ul>\n                                <ul># <strong>Username : </strong>{{ this.dataPegawai.username }}</ul>\n                                <ul># <strong>Alamat : </strong>{{ this.dataPegawai.alamat }}</ul>\n                                <ul># <strong>Tanggal Lahir : </strong>{{ this.dataPegawai.tanggal_lahir }}</ul>\n                                <ul># <strong>Telepon : </strong>{{ this.dataPegawai.telepon }}</ul>\n                                <ul># <strong>Role : </strong>{{ this.dataPegawai.role }}</ul>\n                            </ul>\n                        </tbody>\n                    </v-container>\n                </v-card-text>\n                <v-card-actions>\n                    <v-btn class=\"text-md-right\" color=\"blue accent-2\" text @click=\"dialog = false\">Tutup</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-dialog>\n        <v-app-bar dark app fixed height=\"75px\" color=\"#4E5862\"> \n            <!-- :src=\"bg\" -->\n            <v-app-bar-nav-icon @click.stop=\"drawer = !drawer\"></v-app-bar-nav-icon> \n            <img src=\"../assets/logo.png\" style=\"opacity:0.6;height:65px;width:90px\"> \n            <v-toolbar-title style=\"font-family: 'Jolly Lodger';font-size: 45px;\" > Kouvee Pet Shop </v-toolbar-title>\n            <VSpacer /> \n            <v-toolbar-items>\n                    <!-- <v-menu\n                    v-slot:activator=\"{ on }\"\n                    offset-y\n                    origin=\"center center\"\n                    class=\"elelvation-1\"\n                    :nudge-bottom=\"14\"\n                    transition=\"scale-transition\"\n                    >\n                    <v-btn icon v-on=\"on\" \n                    @click=\"notifFetch()\">\n                        <v-badge color=\"red\" overlap>\n                            <span slot=\"badge\">{{unreadNotifications.length}}</span>\n                        <v-icon medium>mdi-bell-ring-outline</v-icon>\n                        </v-badge>\n                    </v-btn>\n\n                    <v-list>\n                        <v-list-tile :class=\"{'green': notification.read_at==null}\" v-for=\"notification in allNotifications\" :key=\"notification.id\">\n                        <v-list-tile-content>\n                            <v-list-tile-title>{{notification.data.createdUser.name}} has just registered on {{notification.created_at}}</v-list-tile-title>\n                        </v-list-tile-content>\n                        </v-list-tile>\n                    </v-list>\n                    </v-menu> -->\n                <v-btn text router @click=\"dialog = true\"><v-icon>mdi-face</v-icon></v-btn>\n                <v-btn text router @click=\"submitLogout()\"><v-icon>mdi-power</v-icon></v-btn>\n            </v-toolbar-items>\n        </v-app-bar> \n        <VContent > \n            <router-view /> \n        </VContent> \n    </div> \n</template> \n\n<style scoped>\n    @import url(\"https://fonts.googleapis.com/css?family=Jolly%20Lodger\");\n</style>\n\n<script>\nimport { mapGetters, mapActions, mapMutations } from \"vuex\";\nimport manifest from \"../../public/manifest.json\";\nexport default { \n    data () { \n        return { \n            manifest: manifest,\n            dialog: false,\n            drawer: true,\n            expandOnHover: true,\n            miniVariant: true,\n            username: '',\n            role: '',\n            items: [],\n            dataPegawai: [],\n            allNotifications: [],\n            unreadNotifications: [],\n        } \n    }, \n    created() {\n    },\n    mounted () {\n        this.setUsername();\n        this.setRole();\n        this.cekRole();\n        this.readDataPegawai();\n        this.notifPermission();\n        this.notifFetch();\n        // console.log(this.pegawai());\n\n    },\n    methods: {\n        notifFetch(){\n            // messaging.onMessage((payload) => {\n            //     console.log('Message received. ', payload);\n            // // ...\n            // });\n        },\n        notifPermission(){\n            if(this.role=== \"OWNER\"){\n                Notification.requestPermission().then((permission) => {\n                if (permission === 'granted') {\n                    console.log('Notification permission granted.');\n                    // TODO(developer): Retrieve an Instance ID token for use with FCM.\n                    // ...\n                    if(this.isTokenSentToServer()){\n                        console.log(\"Token already save on server\");\n                    }else{\n                        this.getToken();\n                    }\n                } else {\n                    console.log('Unable to get permission to notify.');\n                }\n                });\n            }\n        },\n        saveToken(currentToken) {\n            var uri = this.$apiUrl + '/produk-token/' + currentToken\n            this.$http.get(uri).then(response => {\n            })\n        },\n        setTokenSentToServer(sent) {\n\t        localStorage.setItem('sentToServer', sent ? 1 : 0);\n        },\n        isTokenSentToServer() {\n            return localStorage.getItem('sentToServer') == 1;\n        },\n        getToken(){\n            const messaging = firebase.messaging();\n                    // console.log(messaging.getToken())\n            // Get Instance ID token. Initially this makes a network call, once retrieved\n            // subsequent calls to getToken will return from cache.\n            messaging.usePublicVapidKey(\"BJkk2-iNdhp-oABmlwo0C9i07hQVmS07_z78SzNYn29J5g1_00KljLAa6JTSX0eh-HL2JyWF4GeoNgn44gs52_A\");\n            messaging.getToken().then((currentToken) => {\n                if (currentToken) {\n                    this.saveToken(currentToken);\n                    console.log(currentToken)\n                    this.setTokenSentToServer(true);\n                } else {\n                    console.log('No Instance ID token available. Request permission to generate one.');\n                    this.setTokenSentToServer(false);\n                }\n                }).catch((err) => {\n                    console.log('An error occurred while retrieving token. ', err);\n                    setTokenSentToServer(false);\n                });\n            },\n            readDataPegawai() {\n                var uri = this.$apiUrl + '/pegawai/user/' + this.username;\n                this.$http.get(uri).then(response => {\n                    this.dataPegawai = response.data\n                })\n        },\n        setRole() {\n            this.role = localStorage.getItem('role');\n        },\n        setUsername() {\n            this.username = localStorage.getItem('username');\n        },\n        cekRole(){\n            var role = this.role;\n            if(role == 'OWNER'){\n                this.items = this.owner;\n            }else if(role == 'CS'){\n                this.items = this.cs;\n            }else if(role == 'KASIR'){\n                this.items = this.kasir;\n            }\n        },\n        submitLogout() {\n            localStorage.removeItem('username');\n            localStorage.removeItem('role');\n            this.username = '';\n            this.role = '';\n            this.$router.push({\n                    name: 'login'\n                })\n        },\n        ...mapActions({\n            pegawai: \"pegawai/readData\",\n        }),\n    },\n    computed: {\n    ...mapGetters({\n        owner: \"side/getOwner\",\n        cs : \"side/getCs\",\n        kasir : \"side/getKasir\"\n    }),\n    // bg () {\n    //     return 'https://www.htmlcsscolor.com/preview/gallery/4E5862.png'\n    // },\n},\n} \n</script>"]}]}