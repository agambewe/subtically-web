{"remainingRequest":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bewe/Documents/ppta/subtically/web/src/components/user/storeController.vue?vue&type=style&index=0&id=ecdbaeae&scoped=true&lang=css&","dependencies":[{"path":"/Users/bewe/Documents/ppta/subtically/web/src/components/user/storeController.vue","mtime":1619470509803},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQGltcG9ydCB1cmwoImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1TaGFyZStUZWNoK01vbm8iKTsKCnRhYmxlIHRoICsgdGggeyBib3JkZXItbGVmdDoxcHggc29saWQgI2RkZGRkZDsgfQp0YWJsZSB0ZCArIHRkIHsgYm9yZGVyLWxlZnQ6MXB4IHNvbGlkICNkZGRkZGQ7IH0KdGJvZHkgdHI6bnRoLW9mLXR5cGUob2RkKSB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIC4wNSk7Cn0KCi52LWRhdGEtdGFibGUKL2RlZXAvCnRib2R5Ci9kZWVwLwp0cjpob3Zlcjpub3QoLnYtZGF0YS10YWJsZV9fZXhwYW5kZWRfX2NvbnRlbnQpIHsKICAgIGJhY2tncm91bmQ6ICM4Nzk3YTggIWltcG9ydGFudDsKfQoKLnYtc2VsZWN0X19zZWxlY3Rpb25zIHsKICAgIG1heC13aWR0aDogMTUwcHg7CiAgICBtaW4td2lkdGg6IDEwMHB4OwogICAgYm9yZGVyOiBub25lOwp9CgouZmxleCB7CiAgICBkaXNwbGF5OiAtd2Via2l0LWJveDsKICAgIGRpc3BsYXk6IC1tb3otYm94OwogICAgZGlzcGxheTogLW1zLWZsZXhib3g7CiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7CiAgICBkaXNwbGF5OiBmbGV4Owp9Cg=="},{"version":3,"sources":["storeController.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"storeController.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n    <v-container dark>\n        <vue-progress-bar></vue-progress-bar>\n        <v-container grid-list-md mb-0>\n            <h1 class=\"text-md-center\" style=\"font-family: 'Share Tech Mono';text-shadow: -2px 4px 4px silver\">Add User</h1>\n            <v-layout row wrap style=\"margin:10px\">\n                <v-dialog v-model=\"dialog\" persistent max-width=\"500px\">\n                    <template v-slot:activator=\"{ on }\">\n                        <v-flex class=\"flex\" xs8 style=\"float:right;widht:300\">\n                            <v-btn class=\"mx-2\" fab color=\"primary\" v-on=\"on\" router to=\"/users\">\n                                Back\n                            </v-btn>\n                        </v-flex>\n                    </template>\n                    \n                </v-dialog>\n            </v-layout>\n            <v-card>\n                <v-card-title>\n                    <span class=\"headline\">{{ formTitle }}</span>\n                </v-card-title>\n                <v-card-text>\n                    <v-container>\n                        <ValidationObserver ref=\"observer\" v-slot=\"{  }\">\n                            <v-form>\n                                <v-row>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name='Name' rules=\"required\">\n                                            <v-text-field v-model=\"form.name\" label=\"Name\" :error-messages=\"errors\"\n                                            />\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name=\"Username\" rules=\"required\">\n                                            <v-text-field v-model=\"form.username\" label=\"Username\" :error-messages=\"errors\"></v-text-field>\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name=\"Email\" rules=\"required|email\">  \n                                            <v-text-field v-model=\"form.email\" label=\"Email\" :error-messages=\"errors\"></v-text-field>\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name=\"Role\" rules=\"required\">\n                                            <v-radio-group\n                                            v-model=\"form.role\"\n                                            :error-messages=\"errors\"\n                                            row\n                                            >\n                                                <v-radio\n                                                    label=\"Admin\"\n                                                    value=1\n                                                ></v-radio>\n                                                <v-radio\n                                                    label=\"Pengajar\"\n                                                    value=2\n                                                ></v-radio>\n                                                <v-radio\n                                                    label=\"Siswa\"\n                                                    value=3\n                                                ></v-radio>\n                                            </v-radio-group>\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" vid=\"passwordRef\" name=\"Password\" rules=\"required|min:6\">\n                                            <v-text-field v-model=\"form.password\" type=\"password\" label=\"Password\" :error-messages=\"errors\"></v-text-field>\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name=\"Retype Password\" rules=\"required|confirmed:passwordRef\">\n                                            <v-text-field v-model=\"form.password_confirmation\" type=\"password\" label=\"Retype Password\" :error-messages=\"errors\"></v-text-field>\n                                        </ValidationProvider>\n                                    </v-col>\n                                </v-row>\n                            </v-form>\n                        </ValidationObserver>\n                    </v-container>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"red accent-2\" text @click=\"clear\">Reset</v-btn>\n                    <v-btn color=\"primary\" text @click=\"checkForm()\">Submit</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-container>\n    </v-container>\n</template>\n\n<style scoped>\n    @import url(\"https://fonts.googleapis.com/css?family=Share+Tech+Mono\");\n\n    table th + th { border-left:1px solid #dddddd; }\n    table td + td { border-left:1px solid #dddddd; }\n    tbody tr:nth-of-type(odd) {\n        background-color: rgba(0, 0, 0, .05);\n    }\n    \n    .v-data-table\n    /deep/\n    tbody\n    /deep/\n    tr:hover:not(.v-data-table__expanded__content) {\n        background: #8797a8 !important;\n    }\n\n    .v-select__selections {\n        max-width: 150px;\n        min-width: 100px;\n        border: none;\n    }\n\n    .flex {\n        display: -webkit-box;\n        display: -moz-box;\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n    }\n</style>\n\n<script>\n    import { required, confirmed, email, min} from 'vee-validate/dist/rules'\n    import { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate'\n    setInteractionMode('eager')\n\n    extend('required', {\n        ...required,\n        message: '{_field_} is required.'\n    });\n    extend('email', email);\n    extend('confirmed', confirmed);\n    extend('min', {\n        ...min,\n        message: 'Too few {_field_}.'\n    })\n    export default {\n        components: {\n            ValidationProvider,\n            ValidationObserver,\n        },\n        data() {\n            return {\n                load: false,\n                dialog: '',\n                typeInput: 'Add',\n                role: '',\n                form: {\n                    name: '',\n                    username: '',\n                    email: '',\n                    role: '',\n                    password: '',\n                    password_confirmation: '',\n                },\n                errors: '',\n                user: new FormData,\n            }\n        },\n        computed: {\n            formTitle() {\n                return this.typeInput\n            },\n        },\n        methods: {\n            clear() {\n                this.form = {\n                    name: '',\n                    username: '',\n                    email: '',\n                    role: '',\n                    password: '',\n                    password_confirmation: '',\n                }\n            },\n            async checkForm() {\n                const isValid = await this.$refs.observer.validate();\n                if(isValid){\n                    this.storeData()\n                }\n            },\n            storeData() {\n                this.user.append('name', this.form.name);\n                this.user.append('username', this.form.username);\n                this.user.append('email', this.form.email);\n                this.user.append('role', this.form.role);\n                this.user.append('password', this.form.password);\n                this.user.append('password_confirmation', this.form.password_confirmation);\n\n                var uri = this.$apiUrl + '/register'\n                this.$Progress.start()\n                this.$http.post(uri, this.user, {\n                        headers: {\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\n                        }\n                    }).then(response => {\n                    this.$swal({\n                        icon: 'success',\n                        title: response.data.message,\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                    this.$router.push({\n                        name: 'listUser'\n                    })\n                    this.$Progress.finish()\n                }).catch(error => {\n                    this.errors = error\n                    console.log(this.errors)\n                    this.$Progress.fail()\n                    this.$swal({\n                        icon: 'error',\n                        title: 'Warning !',\n                        text: this.errors,\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                })\n            },\n        },\n        mounted() {\n        },\n    }\n</script>"]}]}