{"remainingRequest":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bewe/Documents/ppta/subtically/web/src/components/sideBar.vue?vue&type=template&id=7d311f5c&scoped=true&","dependencies":[{"path":"/Users/bewe/Documents/ppta/subtically/web/src/components/sideBar.vue","mtime":1604964726217},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}