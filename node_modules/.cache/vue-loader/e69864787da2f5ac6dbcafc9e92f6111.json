{"remainingRequest":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bewe/Documents/ppta/subtically/web/src/components/user/updateController.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bewe/Documents/ppta/subtically/web/src/components/user/updateController.vue","mtime":1618227719334},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlcXVpcmVkLCBjb25maXJtZWQsIGVtYWlsLCBtaW59IGZyb20gJ3ZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzJwppbXBvcnQgeyBleHRlbmQsIFZhbGlkYXRpb25PYnNlcnZlciwgVmFsaWRhdGlvblByb3ZpZGVyLCBzZXRJbnRlcmFjdGlvbk1vZGUgfSBmcm9tICd2ZWUtdmFsaWRhdGUnCnNldEludGVyYWN0aW9uTW9kZSgnZWFnZXInKQoKZXh0ZW5kKCdyZXF1aXJlZCcsIHsKICAgIC4uLnJlcXVpcmVkLAogICAgbWVzc2FnZTogJ3tfZmllbGRffSBpcyByZXF1aXJlZC4nCn0pOwpleHRlbmQoJ2VtYWlsJywgZW1haWwpOwpleHRlbmQoJ2NvbmZpcm1lZCcsIGNvbmZpcm1lZCk7CmV4dGVuZCgnbWluJywgewogICAgLi4ubWluLAogICAgbWVzc2FnZTogJ1RvbyBmZXcge19maWVsZF99LicKfSkKZXhwb3J0IGRlZmF1bHQgewogICAgY29tcG9uZW50czogewogICAgICAgIFZhbGlkYXRpb25Qcm92aWRlciwKICAgICAgICBWYWxpZGF0aW9uT2JzZXJ2ZXIsCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICBjaGVja2JveDogZmFsc2UsCiAgICAgICAgICAgIGxvYWQ6IGZhbHNlLAogICAgICAgICAgICBkaWFsb2c6IGZhbHNlLAogICAgICAgICAgICBmb3JtOiB7CiAgICAgICAgICAgICAgICBuYW1lOiAnJywKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiAnJywKICAgICAgICAgICAgICAgIGVtYWlsOiAnJywKICAgICAgICAgICAgICAgIHJvbGU6ICcnLAogICAgICAgICAgICAgICAgcGFzc3dvcmRfb2xkOiAnJywKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiAnJywKICAgICAgICAgICAgICAgIHBhc3N3b3JkX2NvbmZpcm1hdGlvbjogJycsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVycm9yczogJycsCiAgICAgICAgICAgIHVzZXI6IG5ldyBGb3JtRGF0YSwKICAgICAgICB9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGNsZWFyKCkgewogICAgICAgICAgICB0aGlzLnJlYWREYXRhKCk7CiAgICAgICAgfSwKICAgICAgICByZWFkRGF0YSgpIHsKICAgICAgICAgICAgdmFyIHVyaSA9IHRoaXMuJGFwaVVybCArICcvdXNlcnMvJyt0aGlzLiRyb3V0ZS5wYXJhbXMuaWQKICAgICAgICAgICAgdGhpcy4kaHR0cC5nZXQodXJpKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgICAgIHZhciBpdGVtID0gcmVzcG9uc2UuZGF0YQogICAgICAgICAgICAgICAgdGhpcy5mb3JtLm5hbWUgPSBpdGVtLm5hbWUKICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5lbWFpbCA9IGl0ZW0uZW1haWwKICAgICAgICAgICAgICAgIHRoaXMuZm9ybS51c2VybmFtZSA9IGl0ZW0udXNlcm5hbWUKICAgICAgICAgICAgICAgIHRoaXMuZm9ybS5yb2xlID0gaXRlbS5yb2xlCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBhc3luYyBjaGVja0Zvcm0oKSB7CiAgICAgICAgICAgIGNvbnN0IGlzVmFsaWQgPSBhd2FpdCB0aGlzLiRyZWZzLm9ic2VydmVyLnZhbGlkYXRlKCk7CiAgICAgICAgICAgIGlmKGlzVmFsaWQpewogICAgICAgICAgICAgICAgdGhpcy51cGRhdGVEYXRhKCkKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdXBkYXRlRGF0YSgpIHsKICAgICAgICAgICAgdGhpcy51c2VyLmFwcGVuZCgnbmFtZScsIHRoaXMuZm9ybS5uYW1lKTsKICAgICAgICAgICAgdGhpcy51c2VyLmFwcGVuZCgnZW1haWwnLCB0aGlzLmZvcm0uZW1haWwpOwogICAgICAgICAgICBpZih0aGlzLmNoZWNrYm94KXsKICAgICAgICAgICAgICAgIHRoaXMudXNlci5hcHBlbmQoJ3Bhc3N3b3JkX29sZCcsIHRoaXMuZm9ybS5wYXNzd29yZF9vbGQpOwogICAgICAgICAgICAgICAgdGhpcy51c2VyLmFwcGVuZCgncGFzc3dvcmQnLCB0aGlzLmZvcm0ucGFzc3dvcmQpOwogICAgICAgICAgICAgICAgdGhpcy51c2VyLmFwcGVuZCgncGFzc3dvcmRfY29uZmlybWF0aW9uJywgdGhpcy5mb3JtLnBhc3N3b3JkX2NvbmZpcm1hdGlvbik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHZhciB1cmkgPSB0aGlzLiRhcGlVcmwgKyAnL3VzZXJzLycrdGhpcy4kcm91dGUucGFyYW1zLmlkCiAgICAgICAgICAgIHRoaXMubG9hZCA9IHRydWUKICAgICAgICAgICAgdGhpcy4kaHR0cC5wb3N0KHVyaSwgdGhpcy51c2VyLCB7CiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRzd2FsKHsKICAgICAgICAgICAgICAgICAgICBpY29uOiAnc3VjY2VzcycsCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEubWVzc2FnZSwKICAgICAgICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgdGltZXI6IDE1MDAKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB0aGlzLmxvYWQgPSBmYWxzZTsKICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAnbGlzdFVzZXInCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLiRzd2FsKHsKICAgICAgICAgICAgICAgICAgICBpY29uOiAnZXJyb3InLAogICAgICAgICAgICAgICAgICAgIHRpdGxlOiAnV2FybmluZyAhJywKICAgICAgICAgICAgICAgICAgICB0ZXh0OiBlcnJvci5yZXNwb25zZS5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIHRpbWVyOiAxNTAwCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgdGhpcy5sb2FkID0gZmFsc2U7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMucmVhZERhdGEoKTsKICAgIH0sCn0K"},{"version":3,"sources":["updateController.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"updateController.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\n    <v-container dark>\n        <v-container grid-list-md mb-0>\n            <h1 class=\"text-md-center\" style=\"font-family: 'Share Tech Mono';text-shadow: -2px 4px 4px silver\">Update User</h1>\n            <v-layout row wrap style=\"margin:10px\">\n                <v-dialog v-model=\"dialog\" persistent max-width=\"500px\">\n                    <template v-slot:activator=\"{ on }\">\n                        <v-flex class=\"flex\" xs8 style=\"float:right;widht:300\">\n                            <v-btn class=\"mx-2\" fab color=\"primary\" v-on=\"on\" router to=\"/users\">\n                                Back\n                            </v-btn>\n                        </v-flex>\n                    </template>\n                    \n                </v-dialog>\n            </v-layout>\n            <v-card>\n                <v-card-text>\n                    <v-container>\n                        <ValidationObserver ref=\"observer\" v-slot=\"{  }\">\n                            <v-form>\n                                <v-row>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name='Name' rules=\"required\">\n                                            <v-text-field v-model=\"form.name\" label=\"Name\" :error-messages=\"errors\"\n                                            />\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <v-text-field disabled v-model=\"form.username\" label=\"Username\"></v-text-field>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name=\"Email\" rules=\"required|email\">  \n                                            <v-text-field v-model=\"form.email\" label=\"Email\" :error-messages=\"errors\"></v-text-field>\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <v-radio-group\n                                        v-model=\"form.role\"\n                                        row\n                                        disabled\n                                        >\n                                        <v-radio\n                                            label=\"Admin\"\n                                            value=1\n                                        ></v-radio>\n                                        <v-radio\n                                            label=\"Pengajar\"\n                                            value=2\n                                        ></v-radio>\n                                        <v-radio\n                                            label=\"Siswa\"\n                                            value=3\n                                        ></v-radio>\n                                        </v-radio-group>\n                                    </v-col>\n                                    <v-col cols=\"4\" sm=\"6\" md=\"12\">\n                                        <v-checkbox\n                                            v-model=\"checkbox\"\n                                            hide-details\n                                        ></v-checkbox> Change Password?</v-col>\n                                    <v-col v-if=\"checkbox\" cols=\"4\" sm=\"6\" md=\"12\">\n                                            <ValidationProvider v-slot=\"{ errors }\" name=\"Password\" rules=\"required|min:6\">\n                                                <v-text-field v-model=\"form.oldpassword\" type=\"password\" label=\"Old Password\" :error-messages=\"errors\"></v-text-field>\n                                            </ValidationProvider>\n                                            <ValidationProvider v-slot=\"{ errors }\" vid=\"passwordRef\" name=\"Password\" rules=\"required|min:6\">\n                                                <v-text-field v-model=\"form.password\" type=\"password\" label=\"Password\" :error-messages=\"errors\"></v-text-field>\n                                            </ValidationProvider>\n                                            <ValidationProvider v-slot=\"{ errors }\" name=\"Retype Password\" rules=\"required|confirmed:passwordRef\">\n                                                <v-text-field v-model=\"form.password_confirmation\" type=\"password\" label=\"Retype Password\" :error-messages=\"errors\"></v-text-field>\n                                            </ValidationProvider>\n                                        </v-col>\n                                    \n                                </v-row>\n                            </v-form>\n                        </ValidationObserver>\n                    </v-container>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"red accent-2\" text @click=\"clear\">Reset</v-btn>\n                    <v-btn color=\"primary\" text @click=\"checkForm()\">Submit</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-container>\n    </v-container>\n</template>\n\n<script>\n    import { required, confirmed, email, min} from 'vee-validate/dist/rules'\n    import { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate'\n    setInteractionMode('eager')\n\n    extend('required', {\n        ...required,\n        message: '{_field_} is required.'\n    });\n    extend('email', email);\n    extend('confirmed', confirmed);\n    extend('min', {\n        ...min,\n        message: 'Too few {_field_}.'\n    })\n    export default {\n        components: {\n            ValidationProvider,\n            ValidationObserver,\n        },\n        data() {\n            return {\n                checkbox: false,\n                load: false,\n                dialog: false,\n                form: {\n                    name: '',\n                    username: '',\n                    email: '',\n                    role: '',\n                    password_old: '',\n                    password: '',\n                    password_confirmation: '',\n                },\n                errors: '',\n                user: new FormData,\n            }\n        },\n        methods: {\n            clear() {\n                this.readData();\n            },\n            readData() {\n                var uri = this.$apiUrl + '/users/'+this.$route.params.id\n                this.$http.get(uri).then(response => {\n                    var item = response.data\n                    this.form.name = item.name\n                    this.form.email = item.email\n                    this.form.username = item.username\n                    this.form.role = item.role\n                })\n            },\n            async checkForm() {\n                const isValid = await this.$refs.observer.validate();\n                if(isValid){\n                    this.updateData()\n                }\n            },\n            updateData() {\n                this.user.append('name', this.form.name);\n                this.user.append('email', this.form.email);\n                if(this.checkbox){\n                    this.user.append('password_old', this.form.password_old);\n                    this.user.append('password', this.form.password);\n                    this.user.append('password_confirmation', this.form.password_confirmation);\n                }\n\n                var uri = this.$apiUrl + '/users/'+this.$route.params.id\n                this.load = true\n                this.$http.post(uri, this.user, {\n                        headers: {\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\n                        }\n                    }).then(response => {\n                    this.$swal({\n                        icon: 'success',\n                        title: response.data.message,\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                    this.load = false;\n                    this.$router.push({\n                        name: 'listUser'\n                    })\n                }).catch(error => {\n                    this.$swal({\n                        icon: 'error',\n                        title: 'Warning !',\n                        text: error.response.data.message,\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                    this.load = false;\n                })\n            },\n        },\n        mounted() {\n            this.readData();\n        },\n    }\n</script>"]}]}