{"remainingRequest":"/Users/bewe/Documents/ppta/subtically/web/node_modules/babel-loader/lib/index.js!/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/bewe/Documents/ppta/subtically/web/src/components/video/updateController.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/bewe/Documents/ppta/subtically/web/src/components/video/updateController.vue","mtime":1617316538796},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/bewe/Documents/ppta/subtically/web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL2Jld2UvRG9jdW1lbnRzL3BwdGEvc3VidGljYWxseS93ZWIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvYmV3ZS9Eb2N1bWVudHMvcHB0YS9zdWJ0aWNhbGx5L3dlYi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHJlcXVpcmVkIH0gZnJvbSAndmVlLXZhbGlkYXRlL2Rpc3QvcnVsZXMnOwppbXBvcnQgeyBleHRlbmQsIFZhbGlkYXRpb25PYnNlcnZlciwgVmFsaWRhdGlvblByb3ZpZGVyLCBzZXRJbnRlcmFjdGlvbk1vZGUgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwpzZXRJbnRlcmFjdGlvbk1vZGUoJ2VhZ2VyJyk7CmV4dGVuZCgncmVxdWlyZWQnLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHJlcXVpcmVkKSwge30sIHsKICBtZXNzYWdlOiAne19maWVsZF99IGlzIHJlcXVpcmVkLicKfSkpOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgVmFsaWRhdGlvblByb3ZpZGVyOiBWYWxpZGF0aW9uUHJvdmlkZXIsCiAgICBWYWxpZGF0aW9uT2JzZXJ2ZXI6IFZhbGlkYXRpb25PYnNlcnZlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxvYWQ6IGZhbHNlLAogICAgICBkaWFsb2c6IGZhbHNlLAogICAgICBjZWtWaWRlbzogZmFsc2UsCiAgICAgIHR5cGVJbnB1dDogJ1VwZGF0ZScsCiAgICAgIGxhbmd1YWdlTGlzdDogW3sKICAgICAgICBjb2RlOiAnZW4tRU4nLAogICAgICAgIG5hbWU6ICdFbmdsaXNoJwogICAgICB9LCB7CiAgICAgICAgY29kZTogJ2lkLUlEJywKICAgICAgICBuYW1lOiAnSW5kb25lc2lhbicKICAgICAgfV0sCiAgICAgIGZvcm06IHsKICAgICAgICB0aXRsZTogJycsCiAgICAgICAgZGVzY3JpcHRpb246ICcnLAogICAgICAgIHZpZGVvOiBbXSwKICAgICAgICBsYW5ndWFnZTogJycKICAgICAgfSwKICAgICAgdXBkYXRlZElkOiAnJywKICAgICAgZXJyb3JzOiAnJywKICAgICAgdmlkZW86IG5ldyBGb3JtRGF0YSgpCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkgewogICAgICB0aGlzLnJlYWREYXRhKCk7CiAgICB9LAogICAgcmVhZERhdGE6IGZ1bmN0aW9uIHJlYWREYXRhKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHVyaSA9IHRoaXMuJGFwaVVybCArICcvdmlkZW9zLycgKyB0aGlzLiRyb3V0ZS5wYXJhbXMuaWQ7CiAgICAgIHRoaXMuJGh0dHAuZ2V0KHVyaSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB2YXIgaXRlbSA9IHJlc3BvbnNlLmRhdGFbMF07CiAgICAgICAgX3RoaXMuZm9ybS50aXRsZSA9IGl0ZW0udGl0bGU7CiAgICAgICAgX3RoaXMuZm9ybS52aWRlbyA9IGl0ZW0udmlkZW8uc3BsaXQoJ1xcJykucG9wKCkuc3BsaXQoJy8nKS5wb3AoKTsKICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy5mb3JtLnZpZGVvKTsKICAgICAgICBfdGhpcy5mb3JtLmxhbmd1YWdlID0gaXRlbS5sYW5ndWFnZTsKICAgICAgICBfdGhpcy5mb3JtLmRlc2NyaXB0aW9uID0gaXRlbS5kZXNjcmlwdGlvbjsKICAgICAgfSk7CiAgICB9LAogICAgY2hlY2tGb3JtOiBmdW5jdGlvbiBjaGVja0Zvcm0oKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgaXNWYWxpZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJHJlZnMub2JzZXJ2ZXIudmFsaWRhdGUoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgaXNWYWxpZCA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKGlzVmFsaWQpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLnVwZGF0ZURhdGEoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIHVwZGF0ZURhdGE6IGZ1bmN0aW9uIHVwZGF0ZURhdGEoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy52aWRlby5hcHBlbmQoJ3RpdGxlJywgdGhpcy5mb3JtLnRpdGxlKTsKCiAgICAgIGlmICh0aGlzLmNla1ZpZGVvKSB7CiAgICAgICAgdGhpcy52aWRlby5hcHBlbmQoJ3ZpZGVvJywgIi91cGxvYWRzL3ZpZGVvcy8iICsgdGhpcy5mb3JtLnZpZGVvLm5hbWUpOwogICAgICAgIHRoaXMudmlkZW8uYXBwZW5kKCd0aHVtYm5haWwnLCB0aGlzLmZvcm0udmlkZW8ubmFtZS5zcGxpdCgnLicpWzBdICsgIi5qcGciKTsKICAgICAgICB0aGlzLnZpZGVvLmFwcGVuZCgnZmlsZScsIHRoaXMuZm9ybS52aWRlbyk7CiAgICAgIH0KCiAgICAgIHRoaXMudmlkZW8uYXBwZW5kKCd2aWRlbycsIHRoaXMuZm9ybS52aWRlbyk7CiAgICAgIHRoaXMudmlkZW8uYXBwZW5kKCdsYW5ndWFnZScsIHRoaXMuZm9ybS5sYW5ndWFnZSk7CiAgICAgIHRoaXMudmlkZW8uYXBwZW5kKCdkZXNjcmlwdGlvbicsIHRoaXMuZm9ybS5kZXNjcmlwdGlvbik7CiAgICAgIHZhciB1cmkgPSB0aGlzLiRhcGlVcmwgKyAnL3ZpZGVvcy8nICsgdGhpcy4kcm91dGUucGFyYW1zLmlkOwogICAgICB0aGlzLiRzd2FsKHsKICAgICAgICBpY29uOiAnaW5mbycsCiAgICAgICAgdGl0bGU6ICdQcm9jZXNzaW5nLi4nLAogICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICBkaWRPcGVuOiBmdW5jdGlvbiBkaWRPcGVuKCkgewogICAgICAgICAgdGhpcy4kc3dhbC5zaG93TG9hZGluZygpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuJGh0dHAucG9zdCh1cmksIHRoaXMudmlkZW8sIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQXV0aG9yaXphdGlvbic6ICdCZWFyZXIgJyArIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMy4kc3dhbCh7CiAgICAgICAgICBpY29uOiAnc3VjY2VzcycsCiAgICAgICAgICB0aXRsZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLAogICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgdGltZXI6IDE1MDAKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMzLnJlYWREYXRhKCk7IC8vcmVmcmVzaCBkYXRhIGluaSAKCgogICAgICAgIF90aGlzMy4kcm91dGVyLnB1c2goewogICAgICAgICAgbmFtZTogJ215VmlkZW8nCiAgICAgICAgfSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIF90aGlzMy5lcnJvcnMgPSBlcnJvcjsKCiAgICAgICAgX3RoaXMzLiRzd2FsKHsKICAgICAgICAgIGljb246ICdlcnJvcicsCiAgICAgICAgICB0aXRsZTogJ1dhcm5pbmcgIScsCiAgICAgICAgICB0ZXh0OiBfdGhpczMuZXJyb3JzLAogICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgdGltZXI6IDE1MDAKICAgICAgICB9KTsKCiAgICAgICAgX3RoaXMzLmxvYWQgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZWFkRGF0YSgpOwogIH0KfTs="},{"version":3,"sources":["updateController.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <v-container dark>\n        <v-container grid-list-md mb-0>\n            <h1 class=\"text-md-center\" style=\"font-family: 'Share Tech Mono';text-shadow: -2px 4px 4px silver\">Update Video</h1>\n            <v-layout row wrap style=\"margin:10px\">\n                <v-dialog v-model=\"dialog\" persistent max-width=\"500px\">\n                    <template v-slot:activator=\"{ on }\">\n                        <v-flex class=\"flex\" xs8 style=\"float:right;widht:300\">\n                            <v-btn class=\"mx-2\" fab color=\"primary\" v-on=\"on\" router to=\"/my-videos\">\n                                Back\n                            </v-btn>\n                        </v-flex>\n                    </template>\n                </v-dialog>\n            </v-layout>\n            <v-card>\n                <v-card-text>\n                    <v-container>\n                        <ValidationObserver ref=\"observer\" v-slot=\"{  }\">\n                            <v-form>\n                                <v-row>\n                                    <v-col cols=\"12\" sm=\"6\" md=\"6\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name='Title' rules=\"required\">\n                                            <v-text-field \n                                                v-model=\"form.title\" \n                                                label=\"Title\" \n                                                :error-messages=\"errors\"\n                                            />\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"12\" sm=\"12\" md=\"12\">\n                                            <ValidationProvider v-slot=\"{ errors }\" name=\"Description\" rules=\"required\">\n                                                <v-textarea\n                                                v-model=\"form.description\"\n                                                :error-messages=\"errors\"\n                                                clearable\n                                                counter\n                                                label=\"Description\"\n                                                required\n                                                ></v-textarea>\n                                            </ValidationProvider>\n                                    </v-col>\n                                    <v-col cols=\"12\" sm=\"12\" md=\"12\">\n                                        <v-checkbox\n                                            v-model=\"cekVideo\"\n                                            label=\"Change video?\"\n                                            color=\"primary\"\n                                            hide-details\n                                        ></v-checkbox>\n                                    </v-col>\n                                \n                                    <v-col v-if=\"cekVideo\" cols=\"5\" sm=\"6\" md=\"6\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name=\"Video\" rules=\"required\">  \n                                            <v-file-input\n                                                v-model=\"form.video\"\n                                                :error-messages=\"errors\"\n                                                accept=\"video/*\"\n                                                label=\"File input\"\n                                                required\n                                            ></v-file-input>\n                                        </ValidationProvider>\n                                    </v-col>\n                                    <v-col v-else cols=\"6\" sm=\"6\" md=\"6\">\n                                        <v-text-field label=\"File input\" :value=\"form.video\" disabled></v-text-field>\n                                    </v-col>\n\n                                    <v-col cols=\"6\" sm=\"6\" md=\"6\">\n                                        <ValidationProvider v-slot=\"{ errors }\" name=\"Language\" rules=\"required\">\n                                            <v-autocomplete\n                                                v-model=\"form.language\"\n                                                :items=\"languageList\"\n                                                :error-messages=\"errors\"\n                                                item-value=\"code\"\n                                                item-text=\"name\"\n                                                label=\"Language\"\n                                                required\n                                                hide-selected\n                                                clearable>\n                                            </v-autocomplete>\n                                        </ValidationProvider>\n                                    </v-col>\n                                </v-row>\n                            </v-form>\n                        </ValidationObserver>\n                    </v-container>\n                </v-card-text>\n                <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn color=\"red accent-2\" text @click=\"clear\">Reset</v-btn>\n                    <v-btn color=\"primary\" text @click=\"checkForm()\">Save</v-btn>\n                </v-card-actions>\n            </v-card>\n        </v-container>\n    </v-container>\n</template>\n\n<style scoped>\n    @import url(\"https://fonts.googleapis.com/css?family=Share+Tech+Mono\");\n\n    table th + th { border-left:1px solid #dddddd; }\n    table td + td { border-left:1px solid #dddddd; }\n    tbody tr:nth-of-type(odd) {\n        background-color: rgba(0, 0, 0, .05);\n    }\n    \n    .v-data-table\n    /deep/\n    tbody\n    /deep/\n    tr:hover:not(.v-data-table__expanded__content) {\n        background: #8797a8 !important;\n    }\n\n    .v-select__selections {\n        max-width: 150px;\n        min-width: 100px;\n        border: none;\n    }\n\n    .flex {\n        display: -webkit-box;\n        display: -moz-box;\n        display: -ms-flexbox;\n        display: -webkit-flex;\n        display: flex;\n    }\n</style>\n\n<script>\n    import { required } from 'vee-validate/dist/rules'\n    import { extend, ValidationObserver, ValidationProvider, setInteractionMode } from 'vee-validate'\n    setInteractionMode('eager')\n\n    extend('required', {\n        ...required,\n        message: '{_field_} is required.'\n    })\n    export default {\n        components: {\n            ValidationProvider,\n            ValidationObserver,\n        },\n        data() {\n            return {\n                load: false,\n                dialog: false,\n                cekVideo: false,\n                typeInput: 'Update',\n                languageList : [\n                    { code : 'en-EN', name : 'English' },\n                    { code : 'id-ID', name : 'Indonesian' },\n                ],\n                form: {\n                    title: '',\n                    description: '',\n                    video: [],\n                    language: '',\n                },\n                updatedId: '',\n                errors: '',\n                video: new FormData,\n            }\n        },\n        methods: {\n            clear() {\n                this.readData();\n            },\n            readData() {\n                var uri = this.$apiUrl + '/videos/'+this.$route.params.id\n                this.$http.get(uri).then(response => {\n                    var item = response.data[0]\n                    this.form.title = item.title\n                    this.form.video = item.video.split('\\\\').pop().split('/').pop()\n                    console.log(this.form.video)\n                    this.form.language = item.language\n                    this.form.description = item.description\n                })\n            },\n            async checkForm() {\n                const isValid = await this.$refs.observer.validate();\n                if(isValid){\n                    this.updateData()\n                }\n            },\n            updateData() {\n                this.video.append('title', this.form.title);\n                if(this.cekVideo){\n                    this.video.append('video', \"/uploads/videos/\"+this.form.video.name);\n                    this.video.append('thumbnail', this.form.video.name.split('.')[0]+\".jpg\");\n                    this.video.append('file', this.form.video);\n                }\n                this.video.append('video', this.form.video);\n                this.video.append('language', this.form.language);\n                this.video.append('description', this.form.description);\n\n                var uri = this.$apiUrl + '/videos/'+this.$route.params.id\n                this.$swal({\n                        icon: 'info',\n                        title: 'Processing..',\n                        showConfirmButton: false,\n                        didOpen: function () {\n                            this.$swal.showLoading()\n                        }\n                    })\n                this.$http.post(uri, this.video, {\n                        headers: {\n                            'Authorization': 'Bearer ' + localStorage.getItem('token')\n                        }\n                    }).then(response => {\n                    this.$swal({\n                        icon: 'success',\n                        title: response.data.message,\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                    this.readData(); //refresh data ini \n                    this.$router.push({\n                        name: 'myVideo'\n                    })\n                }).catch(error => {\n                    this.errors = error\n                    this.$swal({\n                        icon: 'error',\n                        title: 'Warning !',\n                        text: this.errors,\n                        showConfirmButton: false,\n                        timer: 1500\n                    })\n                    this.load = false;\n                })\n            },\n        },\n        mounted() {\n            this.readData();\n        },\n    }\n</script>"],"sourceRoot":"src/components/video"}]}